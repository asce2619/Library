/**
 * HEADER
 * File Name:   Book List
 * Programmer:  Jannis Saini
 * Course Code: ICS4U1-02
 * Date:        June 18, 2022
 * Description: User looks for the title of a book by its reference number 
 *              if not found in the file, the user is told to try again 
 */

import java.util.Arrays;
import javax.swing.JOptionPane;

public class JSBookList extends javax.swing.JFrame {

    //array containing the reference numbers
    Integer [] refNum = {1,2,4,6,10,12,14,20,24,26,31,32,33,35,40,46,50,52,54,56,66,100};
    
    //array containing the book names
    String [] names = {"The Adventures of Tom Sawyer","Huckleberry Finn","The Sword in the Stone",
        "Stuart Little","Treasure Island","The Secret Garden","Alice's Adventures in Wonderland",
        "Twenty Thousand Leagues Under the Sea","Peter Pan","Charlotte's Web","A Little Princess",
        "Little Women","Black Beauty","The Merry Adventures of Robin Hood","Robinson Crusoe",
        "Anne of Green Gables","Little House in the Big Woods","Swiss Family Robinson",
        "The Lion, the Witch and the Wardrobe","Heidi","A Winkle in Time","Mary Poppins"};
    
    /**
     * Creates new form JSBookList
     */
    public JSBookList() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        subTitleLabel1 = new javax.swing.JLabel();
        subTitleLabel2 = new javax.swing.JLabel();
        exitButton = new javax.swing.JButton();
        linearLabel = new javax.swing.JLabel();
        userInput = new javax.swing.JTextField();
        refNumLabel = new javax.swing.JLabel();
        linearOutput = new javax.swing.JTextField();
        binaryOutput = new javax.swing.JTextField();
        binaryLabel = new javax.swing.JLabel();
        findButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        backgroundPanel.setBackground(new java.awt.Color(255, 255, 204));

        titleLabel.setFont(new java.awt.Font("Engravers MT", 1, 18)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(204, 0, 0));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Children's Classics");
        titleLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 2));

        subTitleLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        subTitleLabel1.setForeground(new java.awt.Color(153, 0, 0));
        subTitleLabel1.setText("This program will find a book according to the libary refrence number.");

        subTitleLabel2.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        subTitleLabel2.setForeground(new java.awt.Color(153, 0, 0));
        subTitleLabel2.setText("The program will use a Binary Search and Linear Search");

        exitButton.setBackground(new java.awt.Color(255, 255, 204));
        exitButton.setForeground(new java.awt.Color(204, 0, 0));
        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        linearLabel.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        linearLabel.setForeground(new java.awt.Color(255, 51, 51));
        linearLabel.setText("Linear Search");

        refNumLabel.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        refNumLabel.setForeground(new java.awt.Color(255, 51, 51));
        refNumLabel.setText("Enter the Reference Number: ");

        binaryLabel.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        binaryLabel.setForeground(new java.awt.Color(255, 51, 51));
        binaryLabel.setText("Binary Search");

        findButton.setBackground(new java.awt.Color(255, 204, 204));
        findButton.setForeground(new java.awt.Color(204, 0, 0));
        findButton.setText("Find It!");
        findButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout backgroundPanelLayout = new javax.swing.GroupLayout(backgroundPanel);
        backgroundPanel.setLayout(backgroundPanelLayout);
        backgroundPanelLayout.setHorizontalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(backgroundPanelLayout.createSequentialGroup()
                                .addComponent(binaryLabel)
                                .addGap(18, 18, 18)
                                .addComponent(binaryOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(backgroundPanelLayout.createSequentialGroup()
                                .addComponent(linearLabel)
                                .addGap(18, 18, 18)
                                .addComponent(linearOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(subTitleLabel1)
                            .addGroup(backgroundPanelLayout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(subTitleLabel2))))
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(backgroundPanelLayout.createSequentialGroup()
                                .addComponent(refNumLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(userInput, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(backgroundPanelLayout.createSequentialGroup()
                                .addGap(112, 112, 112)
                                .addComponent(findButton, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(36, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundPanelLayout.createSequentialGroup()
                        .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(137, 137, 137))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundPanelLayout.createSequentialGroup()
                        .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        backgroundPanelLayout.setVerticalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(subTitleLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(subTitleLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userInput, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refNumLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(findButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(linearLabel)
                    .addComponent(linearOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(binaryLabel)
                    .addComponent(binaryOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(exitButton)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Program
     * @param evt 
     */
    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    /**
     * Find the Book
     * @param evt 
     */
    private void findButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findButtonActionPerformed
        int input;
        
        //gets the users input
        input = Integer.parseInt(userInput.getText());
        
        userInput.setText("");//clears the textField
        
        //gets the index using the linear search
        int linearAns = linear(input, refNum);
        
        //if the ref # is found it outputs the book that corresponds with it 
        if(linearAns > 0){
            linearOutput.setText("#" + input + " " + names[linearAns]);
        }
        
        //gets the index using the binary search
        int binaryAns = binary(input, 0, refNum.length - 1, refNum);
        
        //if the ref # is found it outputs the book that corresponds with it 
        if(binaryAns > 0){
            binaryOutput.setText("#" + input + " " + names[binaryAns]);
        }
        
        //if the ref # is not found a popup box tells the user to try again 
        if(binaryAns == -1 && linearAns == -1){
            JOptionPane.showMessageDialog(null, "That reference number is not found in the list\n\nPlease try again :)");
        }
    }//GEN-LAST:event_findButtonActionPerformed

    /**
     * Linear Search Method
     * @param input the ref # the user is looking for 
     * @param refNum the array with all the ref #'s
     * @return the index of the book or -1(no index found)
     */
    public static int linear(int input, Integer [] refNum){
        
        //goes through the entire array one at a time till it finds the ref # the user wants 
        for(int i = 0; i < refNum.length; i++) {
            //if the ref # the user wants is found
            if (refNum[i].equals(input)) {
                return i;//returns the index for where the book is 
            }
        }
        return -1;//if the ref # the user wants is not found
    }
    
    /**
     * Binary Search Method
     * @param input the ref # the user is looking for
     * @param left the index of the start of the array(0) with the ref #'s
     * @param right the last index in the array with the ref #'s
     * @param refNum the ref # array
     * @return the index of the book or -1(no index found)
     */
    public static int binary(int input, int left, int right, Integer [] refNum) {
        int middle;//keeps track of the middle of the index it is looking at

        while(left <= right){
            middle = (left + right) / 2;//divides the array in half to get the middle
            
            if (input < refNum[middle]) { //if the number is to high
                right = middle - 1;
            }
            else if (input > refNum[middle]) { //if the number is to low
                left = middle + 1;
            } 
            else { //if the number is exactly what the user wants 
                return middle;//returns the ref # for where the book is 
            }
        }
        return -1;//if the ref # the user wants is not in the array
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JSBookList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JSBookList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JSBookList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JSBookList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JSBookList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JLabel binaryLabel;
    private javax.swing.JTextField binaryOutput;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton findButton;
    private javax.swing.JLabel linearLabel;
    private javax.swing.JTextField linearOutput;
    private javax.swing.JLabel refNumLabel;
    private javax.swing.JLabel subTitleLabel1;
    private javax.swing.JLabel subTitleLabel2;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField userInput;
    // End of variables declaration//GEN-END:variables
}
